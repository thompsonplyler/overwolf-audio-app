Title: Overwolf API Overview | Overwolf Developers
Source URL: https://dev.overwolf.com/ow-native/reference/ow-api-overview

Overwolf API Overview
=====================

Overwolf APIs are global components that allow interaction with various Overwolf features, third party services and server-side queries.

API's Reference[](#apis-reference "Direct link to API's Reference")
----------------------------------------------------------------------

* [overwolf.version](#overwolfversion)
* [overwolf.benchmarking](#overwolfbenchmarking)
* [overwolf.campaigns](#overwolfcampaigns)
* [overwolf.cryptography](#overwolfcryptography)
* [overwolf.extensions](#overwolfextensions)
* [overwolf.games](#overwolfgames)
* [overwolf.games.events](#overwolfgamesevents)
* [overwolf.games.tracked](#overwolfgamestracked)
* [overwolf.io](#overwolfio)
* [overwolf.logitech](#overwolflogitech)
* [overwolf.media](#overwolfmedia)
* [overwolf.notifications](#overwolfnotifications)
* [overwolf.os](#overwolfos)
* [overwolf.profile](#overwolfprofile)
* [overwolf.profile.subscriptions](#overwolfprofilesubscriptions)
* [overwolf.settings](#overwolfsettings)
* [overwolf.social](#overwolfsocial)
* [overwolf.streaming](#overwolfstreaming)
* [overwolf.utils](#overwolfutils)
* [overwolf.web](#overwolfweb)
* [overwolf.windows](#overwolfwindows)

overwolf.version[](#overwolfversion "Direct link to overwolf.version")
-------------------------------------------------------------------------

> Returns a string value containing the version of the currently installed client.

Common use cases:

* Enable/disable features based on version.

overwolf.benchmarking[](#overwolfbenchmarking "Direct link to overwolf.benchmarking")
----------------------------------------------------------------------------------------

warning

This API is deprecated, and is not guaranteed to work perfectly!

Common use cases:

* Get hardware information.
* Get FPS performance information.

overwolf.campaigns[](#overwolfcampaigns "Direct link to overwolf.campaigns")
-------------------------------------------------------------------------------

> Use the [overwolf.campaigns](/ow-native/reference/crossapp/ow-campaigns-crossapp) API to get info about active campagins.

Common use cases:

* Get info about active campagins.
* Allows crossapp-promotions: One app can promote another app and then get an indication for a successful conversion.

overwolf.cryptography[](#overwolfcryptography "Direct link to overwolf.cryptography")
----------------------------------------------------------------------------------------

> Use the [overwolf.cryptography](/ow-native/reference/cryptography/api) API to encrypt and decrypt ciphertext.

Common use cases:

* Secure app data and variables.
* Encrypt localStorage variables that store auth-tokens when using OAuth.

overwolf.extensions[](#overwolfextensions "Direct link to overwolf.extensions")
----------------------------------------------------------------------------------

> Use the [overwolf.extensions](/ow-native/reference/extensions/ow-extensions) API to operate or retrieve details on a specific Overwolf app.

Common use cases:

* Launch another app.
* Get the running state of an Overwolf app.
* Get the manifest.json data of an app.

overwolf.games[](#overwolfgames "Direct link to overwolf.games")
-------------------------------------------------------------------

> Use the [overwolf.games](/ow-native/reference/games/ow-games) API to receive basic game information.

Common use cases:

* Your app wants to know whether an Overwolf supported game was launched or closed
* Get the currently running game's name, Overwolf ID, screen resolution and more information

overwolf.games.events[](#overwolfgamesevents "Direct link to overwolf.games.events")
---------------------------------------------------------------------------------------

> Use the [overwolf.games.events](/ow-native/reference/games/events) API to get notified when certain interesting events happens while playing in a certain game. This could be a death, a kill, an item purchase or anything else we're able to log from that game (see the Available Game Events list for more ideas).

overwolf.games.tracked[](#overwolfgamestracked "Direct link to overwolf.games.tracked")
------------------------------------------------------------------------------------------

> Use the [overwolf.games.tracked](/ow-native/reference/games/tracked) API to receive basic game information for games that are defined as unsupported in the gameslist.
> The usage of this API requires you to use the `tracked` property under the [launch\_events](/ow-native/reference/manifest/manifest-json#launch_event_settings-array) property in the `manifest.json`

overwolf.io[](#overwolfio "Direct link to overwolf.io")
----------------------------------------------------------

> Use the [overwolf.io](/ow-native/reference/io/ow-io) API to check whether a certain file exists or in order to write content in a file. For more I/O functionalities, please use our [simple I/O plugin](/ow-native/guides/dev-tools/plugins/ow-simple-io-plugin).

overwolf.logitech[](#overwolflogitech "Direct link to overwolf.logitech")
----------------------------------------------------------------------------

> Use the [overwolf.logitech](/ow-native/reference/logitech/ow-logitech) as an interface for Logitech hardware such as Logitech ARX and Logitech LED keyboards.

Common use cases:

* Light the user's LED keyboard in a certain pattern when an interesting event has happened in-game by using the overwolf.game.events API and the overwolf.logitech API together.

overwolf.media[](#overwolfmedia "Direct link to overwolf.media")
-------------------------------------------------------------------

> Use the [overwolf.media](/ow-native/reference/media/ow-media) API to capture a screenshot or create a GIF of the game currently played.

* Use the [overwolf.media.replays](/ow-native/reference/media/replays) API to capture a short video replay of the game currently played.
* Use the [overwolf.media.videos](/ow-native/reference/media/videos) API to create a video composition, delete video files, or get the information of video files that were created by this app.
* ~~Use the overwolf.media.audio API to play an audio file~~ - This API is now deprecated, please Use the html5 [audio](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio) tag instead.

overwolf.notifications[](#overwolfnotifications "Direct link to overwolf.notifications")
-------------------------------------------------------------------------------------------

> Use the [overwolf.notifications](/ow-native/reference/notifications/overwolf-notifications) API for sending windows OS toast notifications.

overwolf.os[](#overwolfos "Direct link to overwolf.os")
----------------------------------------------------------

> Use the [overwolf.os](/ow-native/reference/os/ow-os) API for Operating System related functions.

overwolf.profile[](#overwolfprofile "Direct link to overwolf.profile")
-------------------------------------------------------------------------

> Use the [overwolf.profile](/ow-native/reference/profile/ow-profile) API to get Overwolf account information for the current user, this includes user name, log-in events and more.

overwolf.profile.subscriptions[](#overwolfprofilesubscriptions "Direct link to overwolf.profile.subscriptions")
------------------------------------------------------------------------------------------------------------------

> [overwolf.profile.subscriptions](/ow-native/reference/profile/subscriptions) Provides functions and events to help with user profile subscription management.

overwolf.settings[](#overwolfsettings "Direct link to overwolf.settings")
----------------------------------------------------------------------------

> Use the [overwolf.settings](/ow-native/reference/settings/ow-settings) API to view and modify one of the following Overwolf preferences:

* Set hotkeys, register a function for a hotkey, or retrieve an existing hotkey key combination
* Retrieve the currently selected Overwolf client language
* Video recording location, capture settings, quality settings etc.

overwolf.social[](#overwolfsocial "Direct link to overwolf.social")
----------------------------------------------------------------------

> [overwolf.social](/ow-native/reference/social/ow-social) provides access to social networks we support:

* [overwolf.social.youtube](/ow-native/reference/social/youtube) Provides access to the YouTube social provider.
* [overwolf.social.discord](/ow-native/reference/social/discord) Provides access to the Discord social provider.
* [overwolf.social.reddit](/ow-native/reference/social/reddit) Provides access to the Reddit social provider.
* ~~overwolf.social.gfycat Provides access to the Gfycat social provider~~ - Deprecated.

overwolf.streaming[](#overwolfstreaming "Direct link to overwolf.streaming")
-------------------------------------------------------------------------------

> Use the [overwolf.streaming](/ow-native/reference/streaming/ow-streaming) API to capture a video of the current game, or stream the current game directly to [Twitch.tv](https://www.twitch.tv/)

overwolf.utils[](#overwolfutils "Direct link to overwolf.utils")
-------------------------------------------------------------------

> Use the [overwolf.utils](/ow-native/reference/utils/ow-utils) API to get the user's system information, send keystrokes to the game, open URLs in default browser and more.

Common use cases:

* Getting a string that is currently placed in the clipboard
* Getting the user's system information including OS, monitors, CPU, GPU, input devices etc.
* Opening a URL in a new browser window
* Sending keystrokes to the running game

overwolf.web[](#overwolfweb "Direct link to overwolf.web")
-------------------------------------------------------------

> Use the [overwolf.web](/ow-native/reference/web/ow-web) API to open a local HTTP web-server.

overwolf.windows[](#overwolfwindows "Direct link to overwolf.windows")
-------------------------------------------------------------------------

> Use the [overwolf.windows](/ow-native/reference/windows/ow-windows) API to to create, modify or interact with your app's windows.

Common use cases:

* Open a new app window
* Change window location or size
* Get information about a specific app window - id, name, width, height, location and more.
* Minimize or maximize a window
* Facilitate communications between windows